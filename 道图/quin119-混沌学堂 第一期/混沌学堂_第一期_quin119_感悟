最大的感悟是自己避让眼睛能说出个一二了，也有了自己的理解，可能在某些地方还是描述的不准确。
从计算机的发展史开始引出计算机的主干，围绕这条主干引出了计算机“四元组”cpu\硬件\外接设备\存储。由此对每一个组件进行推导出。
从开始的0和1组成的机器语言，到后来的高级语言的演变。cpu作为计算机的核心单元，对内有自己的一套处理逻辑，对外有是围绕着汇编器
的规则进行适配。无论是上层的汇编语言还是底层的机器语言（ISA指令集-字节码）都是运行在vm上。
然而在vm中内存出现了分级：根据功能的不同，在数据上来看可以分为：共享和私有。汇编语言作为ISA的抽象，
同样能够完成机器语言的操作在这里引出了对机器语言的编译，其实编译的工作是贯穿真个体系的。
例如ISA在对cpu控制单元操作时候同样也会用到编译器。
当有指令段的出现后，在内存的存储形式上可以分为：连续和非连续，产生的内存碎片也是由分片算法造成的，
至于内存的碎片是否可以关联到ISA指令集中的CISC（这一点只是我自己的见解，还不知道是否正确，需要大佬进一步带着验证）。